<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:scaleruler="com.linkage.module.topo.framework.view.component.scaleruler.*"
		 width="100%"
		 height="100%">
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import com.linkage.module.topo.framework.Constants;
			import com.linkage.module.topo.framework.controller.event.CanvasEvent;
			import com.linkage.module.topo.framework.controller.event.TopoEvent;
			import com.linkage.module.topo.framework.view.component.TopoCanvas;
			import com.linkage.system.logging.ILogger;
			import com.linkage.system.logging.Log;

			import mx.core.IVisualElement;

			private var log:ILogger = Log.getLogger("com.linkage.module.topo.framework.view.component.scaleruler.ScaleRuler");

			[Bindable]
			private var _visible:Boolean = true;
			// body内容中的组件
			private var _bodyChild:IVisualElement = null;
			// 拓扑画布
			private var _topoCanvas:TopoCanvas = null;
			//
			[Bindable]
			private var _uint:String = null;


			private function body_creationCompleteHandler():void
			{
				body.addElement(_bodyChild);
			}

			/**
			 * 标尺是否显示
			 */
			public function set rulerVisible(value:Boolean):void
			{
				_visible = value;
			}

			/**
			 * 标尺内部内容
			 */
			public function set child(value:IVisualElement):void
			{
				_bodyChild = value;
			}

			/**
			 * 画布
			 */
			public function set topoCanvas(value:TopoCanvas):void
			{
				_topoCanvas = value;

				_topoCanvas.addEventListener(CanvasEvent.SCALE_CHANGED, handler_scaleChanged);
				_topoCanvas.addEventListener(TopoEvent.SCALERULER_TOGGLE, handler_scaleRulerToggle);
			}

			// 比例尺变化事件监听
			private function handler_scaleChanged(event:CanvasEvent):void
			{
				var scaleX:Number = event.getProperty(Constants.MAP_KEY_SCALEX_AFTER);
				var scaleY:Number = event.getProperty(Constants.MAP_KEY_SCALEY_AFTER);
				hruler.scaleX = scaleX;
				vruler.scaleY = scaleY;
			}

			// 标尺显隐切换事件监听
			private function handler_scaleRulerToggle(event:TopoEvent):void
			{
				log.info("handler_scaleRulerToggle before " + _visible);
				_visible = !_visible;
				log.info("handler_scaleRulerToggle after " + _visible);
			}

			[Inspectable(category="General", enumeration="px,mm,cm", defaultValue="px")]
			/**
			 * 单位
			 */
			public function set unit(value:String):void
			{
				_uint = value;
			}
		]]>
	</fx:Script>
	<mx:Grid id="scaleRulerGrid"
			 width="100%"
			 height="100%"
			 horizontalGap="0"
			 verticalGap="0">
		<mx:GridRow width="100%"
					height="26"
					visible="{_visible}"
					includeInLayout="{_visible}">
			<mx:GridItem width="26"
						 height="26">

			</mx:GridItem>
			<mx:GridItem width="100%"
						 height="26">
				<scaleruler:HorizontalRuler width="100%"
											height="100%"
											id="hruler"
											unit="{_uint}"/>
			</mx:GridItem>
		</mx:GridRow>
		<mx:GridRow width="100%"
					height="100%">
			<mx:GridItem width="0"
						 height="100%"
						 visible="{_visible}"
						 includeInLayout="{_visible}">
				<scaleruler:VerticalRuler width="100%"
										  height="100%"
										  id="vruler"
										  unit="{_uint}"/>
			</mx:GridItem>
			<mx:GridItem width="100%"
						 height="100%"
						 id="body"
						 creationComplete="body_creationCompleteHandler()">
				<!-- 内容 -->

			</mx:GridItem>
		</mx:GridRow>
	</mx:Grid>
</s:Group>
